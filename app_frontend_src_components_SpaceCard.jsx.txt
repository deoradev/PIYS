import React, { useState } from 'react';
import axios from 'axios';

const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';

const SpaceCard = ({ space, showQR = false }) => {
  const [qrCode, setQrCode] = useState(null);
  const [loading, setLoading] = useState(false);
  const [showQRModal, setShowQRModal] = useState(false);

  const getAuthHeaders = () => ({
    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }
  });

  const generateQR = async () => {
    try {
      setLoading(true);
      const response = await axios.post(`${API_URL}/qrcodes`, {
        space_id: space.id
      }, getAuthHeaders());
      setQrCode(response.data);
      setShowQRModal(true);
    } catch (error) {
      console.error('Error generating QR code:', error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <>
      <div className="bg-white rounded-xl p-6 shadow-sm border border-gray-200 hover:shadow-md transition-shadow">
        <div className="mb-4">
          <h3 className="text-lg font-semibold text-gray-900 mb-2">
            {space.title}
          </h3>
          <p className="text-gray-600 text-sm mb-3">
            {space.address}
          </p>
        </div>

        <div className="space-y-3">
          <div className="flex justify-between items-center">
            <span className="text-gray-700">Hourly Rate:</span>
            <span className="text-green-600 font-semibold">${space.hourly_rate}/hr</span>
          </div>

          {space.daily_rate && (
            <div className="flex justify-between items-center">
              <span className="text-gray-700">Daily Rate:</span>
              <span className="text-green-600 font-semibold">${space.daily_rate}/day</span>
            </div>
          )}

          <div className="flex justify-between items-center">
            <span className="text-gray-700">Status:</span>
            <span className={`px-2 py-1 rounded-full text-xs font-medium ${
              space.available 
                ? 'bg-green-100 text-green-800' 
                : 'bg-red-100 text-red-800'
            }`}>
              {space.available ? 'Available' : 'Occupied'}
            </span>
          </div>
        </div>

        {showQR && (
          <div className="mt-4 pt-4 border-t">
            <button
              onClick={generateQR}
              disabled={loading}
              className="w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium disabled:opacity-50"
            >
              {loading ? 'Generating...' : 'Generate QR Code'}
            </button>
          </div>
        )}

        <div className="mt-3 text-xs text-gray-500">
          Created {new Date(space.created_at).toLocaleDateString()}
        </div>
      </div>

      {/* QR Code Modal */}
      {showQRModal && qrCode && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-xl p-6 w-full max-w-md mx-4">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-semibold text-gray-900">QR Code</h3>
              <button
                onClick={() => setShowQRModal(false)}
                className="text-gray-400 hover:text-gray-600"
              >
                <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>

            <div className="text-center">
              <div className="bg-white p-4 rounded-lg border inline-block">
                <img 
                  src={qrCode.qr_image} 
                  alt="QR Code" 
                  className="w-48 h-48"
                />
              </div>
              
              <div className="mt-4">
                <p className="text-sm text-gray-600 mb-2">
                  Scan this QR code to access parking space details
                </p>
                <p className="text-xs text-gray-500 font-mono bg-gray-100 p-2 rounded">
                  Code: {qrCode.unique_code}
                </p>
              </div>

              <div className="mt-4 flex gap-2">
                <button
                  onClick={() => {
                    const link = document.createElement('a');
                    link.href = qrCode.qr_image;
                    link.download = `qr-code-${qrCode.unique_code}.png`;
                    link.click();
                  }}
                  className="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-medium"
                >
                  Download
                </button>
                <button
                  onClick={() => setShowQRModal(false)}
                  className="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 font-medium"
                >
                  Close
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default SpaceCard;
